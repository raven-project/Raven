prompt_plan_task = """
你是一名网络信息收集专家。你的任务是根据用户输入确定后续需要执行的子任务。

请将输入划分为以下三个 Recon 子任务之一或者多个（按顺序）：
1. 执行目标资产的端口扫描，识别开放端口和运行服务
2. 对目标站点进行目录枚举，发现潜在的隐藏路径或敏感接口
3. 对目标站点进行指纹识别，识别服务类型、框架和中间件信息，判断技术栈与应用特征

如果是信息收集或者侦察等比较宽泛的任务内容，可以返回全部子任务。

返回一个 **合法的 JSON 数组**，其中包含 Recon 子任务的字符串描述。

必须满足以下要求：
- 仅输出标准 JSON 数组，如：["任务1内容", "任务2内容", "任务3内容"]
- 不要输出任何额外文字、空行、解释、标点或 markdown。
- 输出必须能被 Python 的 json.loads() 成功解析。

请返回 JSON 数组形式的子任务列表。

用户输入:
{content}
"""

prompt_supervisor = """
你是信息收集任务的调度助手。下面是当前需要执行的子任务，请判断应该调用哪个工具节点进行执行。

子任务内容：
{content}

可供选择的工具节点：
- port_scan:用于执行端口扫描
- dir_enumerate:用于执行目录枚举
- app_server:用于识别应用服务类型
- summary:所有任务执行完毕时用于总结结果

请根据子任务内容，仅返回以下关键词之一: port_scan、dir_enumerate、app_server 或 summary。
不要输出其他内容。
"""
prompt_call_tool = """
你是一个信息收集任务的参数生成助手。你的任务是根据用户提供的 Recon 子任务描述，从你加载的工具函数中选择一个最合适的，并生成对应的 JSON 格式函数调用结构。

用户希望你**只输出 JSON 格式的函数调用结构**，不需要执行任何工具或返回解释文字。
- 目标主机（必须用于端口/服务类工具的目标参数）：{host}
---

Recon 子任务描述如下：
{content}

---

请根据这个任务内容，完成如下要求：

1. 在你加载的函数中选择一个最合适的（例如：`nmap`、`masscan`、`dirsearch_explosion_tool`、`dirb` 等）。
2. 为该函数构造合法的调用参数，形成如下结构的 JSON：

```
{{
  "function": {{
    "name": "函数名，如 nmap",
    "arguments": {{
      "参数1": "值",
      "参数2": ["值1", "值2"]
    }}
  }}
}}
```

3. 如果你无法判断使用哪个函数，或者缺乏必要参数，请返回以下 JSON：

```
{{
  "function": {{
    "name": "noop",
    "arguments": {{}}
  }}
}}
```

---

### 注意：
- 你只能输出 **纯粹的 JSON**,不要输出任何解释、提示、markdown 标记或空行。
- 参数值必须与函数定义匹配，类型可以是字符串、数字、布尔值或数组。
- 不允许输出 `<tool_call>`、`<function_call>` 等占位内容。
- 你的输出必须能够被 Python 的 `json.loads()` 成功解析。


"""


prompt_summary = """
以下是 Recon 阶段三个子任务的历史执行结果。请基于这些内容进行总结，提取关键发现并以简明报告形式输出。

任务历史结果:
{content}

要求:
- 总结端口开放情况、常见服务及其潜在风险
- 归纳发现的敏感目录或重要路径
- 分析服务类型与可能存在的技术栈
- 使用自然语言输出，不必遵循原始字段结构
- 输出结果应直接服务于渗透测试后续阶段

请直接输出 Recon 报告内容。
"""
